//
// Generated file, do not edit! Created by nedtool 5.0 from DVCast.msg.
//

#ifndef __DVCAST_M_H
#define __DVCAST_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "veins/modules/messages/WaveShortMessage_m.h"
#include "veins/base/utils/Coord.h"
// }}

/**
 * Class generated from <tt>DVCast.msg:29</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet DVCast extends WaveShortMessage
 * {
 *     int id;
 *     Coord roi_up;
 *     Coord roi_down;
 *     double lastx;
 *     double lasty;
 *     double dlastx;
 *     double dlasty;
 * }
 * </pre>
 */
class DVCast : public ::WaveShortMessage
{
  protected:
    int id;
    Coord roi_up;
    Coord roi_down;
    double lastx;
    double lasty;
    double dlastx;
    double dlasty;

  private:
    void copy(const DVCast& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const DVCast&);

  public:
    DVCast(const char *name=nullptr, int kind=0);
    DVCast(const DVCast& other);
    virtual ~DVCast();
    DVCast& operator=(const DVCast& other);
    virtual DVCast *dup() const {return new DVCast(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual int getId() const;
    virtual void setId(int id);
    virtual Coord& getRoi_up();
    virtual const Coord& getRoi_up() const {return const_cast<DVCast*>(this)->getRoi_up();}
    virtual void setRoi_up(const Coord& roi_up);
    virtual Coord& getRoi_down();
    virtual const Coord& getRoi_down() const {return const_cast<DVCast*>(this)->getRoi_down();}
    virtual void setRoi_down(const Coord& roi_down);
    virtual double getLastx() const;
    virtual void setLastx(double lastx);
    virtual double getLasty() const;
    virtual void setLasty(double lasty);
    virtual double getDlastx() const;
    virtual void setDlastx(double dlastx);
    virtual double getDlasty() const;
    virtual void setDlasty(double dlasty);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const DVCast& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, DVCast& obj) {obj.parsimUnpack(b);}


#endif // ifndef __DVCAST_M_H

